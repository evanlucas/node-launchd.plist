{"name":"Node-launchd.plist","tagline":"An easier way to create launchd plists","body":"  - [Plist()](#plist)\r\n  - [Plist.addBoolean()](#plistaddbooleankstringvboolean)\r\n  - [Plist.addString()](#plistaddstringkstringvstringmandarray)\r\n  - [Plist.addArray()](#plistaddarraykstringvarraystringnumberobject)\r\n  - [Plist.addNumber()](#plistaddnumberkstringvnumber)\r\n  - [Plist.addObject()](#plistaddobjectkstringvobject)\r\n  - [Plist.setDisabled()](#plistsetdisableddisabledboolean)\r\n  - [Plist.setEnableGlobbing()](#plistsetenableglobbingglobbingboolean)\r\n  - [Plist.setEnableTransactions()](#plistsetenabletransactionstransactionsboolean)\r\n  - [Plist.setOnDemand()](#plistsetondemandondemandboolean)\r\n  - [Plist.setRunAtLoad()](#plistsetrunatloadrunatloadboolean)\r\n  - [Plist.setInitGroups()](#plistsetinitgroupsgroupsboolean)\r\n  - [Plist.setInetdCompatibilityWait()](#plistsetinetdcompatibilitywaitwaitboolean)\r\n  - [Plist.setStartOnMount()](#plistsetstartonmountsboolean)\r\n  - [Plist.setDebug()](#plistsetdebugdboolean)\r\n  - [Plist.setWaitForDebugger()](#plistsetwaitfordebuggerdboolean)\r\n  - [Plist.setAbandonProcessGroup()](#plistsetabandonprocessgroupdboolean)\r\n  - [Plist.setLowPriorityIO()](#plistsetlowpriorityiodboolean)\r\n  - [Plist.setLaunchOnlyOnce()](#plistsetlaunchonlyoncedboolean)\r\n  - [Plist.setLabel()](#plistsetlabellabelstring)\r\n  - [Plist.setProgram()](#plistsetprogramprogramstring)\r\n  - [Plist.setUserName()](#plistsetusernameusernamestring)\r\n  - [Plist.setGroupName()](#plistsetgroupnamegroupnamestring)\r\n  - [Plist.setLimitLoadToSessionType()](#plistsetlimitloadtosessiontypesessiontypestring)\r\n  - [Plist.setStdErrPath()](#plistsetstderrpathpstring)\r\n  - [Plist.setStdOutPath()](#plistsetstdoutpathpstring)\r\n  - [Plist.setStdInPath()](#plistsetstdinpathsstring)\r\n  - [Plist.setRootDir()](#plistsetrootdirdirstring)\r\n  - [Plist.setWorkingDir()](#plistsetworkingdirdirstring)\r\n  - [Plist.setProcessType()](#plistsetprocesstypesstring)\r\n  - [Plist.setUmask()](#plistsetumaskumasknumber)\r\n  - [Plist.setTimeOut()](#plistsettimeouttonumber)\r\n  - [Plist.setExitTimeOut()](#plistsetexittimeouttonumber)\r\n  - [Plist.setThrottleInterval()](#plistsetthrottleintervalthrottlenumber)\r\n  - [Plist.setStartInterval()](#plistsetstartintervalinumber)\r\n  - [Plist.setNice()](#plistsetniceinumber)\r\n  - [Plist.setProgramArgs()](#plistsetprogramargsargsarraystringnumberobject)\r\n  - [Plist.setLimitLoadToHosts()](#plistsetlimitloadtohostshostsarraystringnumber)\r\n  - [Plist.setLimitLoadFromHosts()](#plistsetlimitloadfromhostshostsarraystringnumber)\r\n  - [Plist.setWatchPaths()](#plistsetwatchpathsparraystringnumberobject)\r\n  - [Plist.setQueueDirectories()](#plistsetqueuedirectoriesdarraystringnumberobject)\r\n  - [Plist.setEnvVar()](#plistsetenvvarobjobject)\r\n  - [Plist.setSoftResourceLimits()](#plistsetsoftresourcelimitsobjobject)\r\n  - [Plist.setHardResourceLimits()](#plistsethardresourcelimitsobjobject)\r\n  - [Plist.setKeepAlive()](#plistsetkeepalivekeepalivebooleanstringnumberobject)\r\n  - [Plist.deleteStartCalendarInterval()](#plistdeletestartcalendarinterval)\r\n  - [Plist.addCalendarInterval()](#plistaddcalendarintervaloobject)\r\n  - [Plist.build()](#plistbuildobjobject)\r\n  - [Plist.reset()](#plistreset)\r\n\r\n## Plist()\r\n\r\n  Constructor\r\n\r\n## Plist.addBoolean(k:String, v:Boolean)\r\n\r\n  Adds a boolean to the plist object for the given `k`\r\n  \r\n  Example\r\n  \r\n```js\r\n plist.addBoolean('Disabled', true)\r\n```\r\n\r\n## Plist.addString(k:String, v:String, mand:Array)\r\n\r\n  Adds a string to the plist object for the given `k`\r\n  \r\n  If `mand` is not an array, then no restrictions are placed\r\n  \r\n  Example\r\n  \r\n```js\r\n plist.addString('Label', 'com.curapps.test')\r\n```\r\n\r\n## Plist.addArray(k:String, v:Array|String|Number|Object)\r\n\r\n  Adds an array to the plist object for the given `k`\r\n  \r\n  NOTE: **Any value that is not an array will be wrapped in an array**\r\n  \r\n  Example\r\n  \r\n```js\r\n plist.addArray('ProgramArguments', ['/usr/local/bin/node', 'test.js'])\r\n```\r\n\r\n## Plist.addNumber(k:String, v:Number)\r\n\r\n  Adds a number to the plist object for the given `k`\r\n  \r\n  Example\r\n  \r\n```js\r\n plist.addNumber('TimeOut', 30)\r\n```\r\n\r\n## Plist.addObject(k:String, v:Object)\r\n\r\n  Adds an object to the plist object for the given `k`\r\n  \r\n  Example\r\n  \r\n```js\r\n var obj = { DEBUG: 'Plist*' };\r\n plist.addObject('EnvironmentVariables', obj)\r\n```\r\n\r\n## Plist.setDisabled(disabled:Boolean)\r\n\r\n  Sets the `Disabled` bool\r\n  \r\n  Example\r\n  \r\n```js\r\n plist.setDisabled(true)\r\n```\r\n\r\n## Plist.setEnableGlobbing(globbing:Boolean)\r\n\r\n  Sets the `EnableGlobbing` bool\r\n  \r\n  Example\r\n  \r\n```js\r\n plist.setEnableGlobbing(false)\r\n```\r\n\r\n## Plist.setEnableTransactions(transactions:Boolean)\r\n\r\n  Sets the `EnableTransactions` bool\r\n  \r\n  Example\r\n  \r\n```js\r\n plist.setEnableTransactions(true)\r\n```\r\n\r\n## Plist.setOnDemand(ondemand:Boolean)\r\n\r\n  Sets the `OnDemand` bool\r\n  \r\n  Example\r\n  \r\n```js\r\n plist.setOnDemand(false)\r\n```\r\n\r\n## Plist.setRunAtLoad(runatload:Boolean)\r\n\r\n  Sets the `RunAtLoad` bool\r\n  \r\n  Example\r\n  \r\n```js\r\n plist.setRunAtLoad(true)\r\n```\r\n\r\n## Plist.setInitGroups(groups:Boolean)\r\n\r\n  Sets the `InitGroups` bool\r\n  \r\n  Example\r\n  \r\n```js\r\n plist.setInitGroups(false)\r\n```\r\n\r\n## Plist.setInetdCompatibilityWait(wait:Boolean)\r\n\r\n  Sets the `inetdCompatibility.Wait` bool\r\n  \r\n  Example\r\n  \r\n```js\r\n plist.setInetdCompatibilityWait(false)\r\n```\r\n\r\n## Plist.setStartOnMount(s:Boolean)\r\n\r\n  Sets the `StartOnMount` bool\r\n  \r\n  Example\r\n  \r\n```js\r\n plist.setStartOnMount(true)\r\n```\r\n\r\n## Plist.setDebug(d:Boolean)\r\n\r\n  Sets the `Debug` bool\r\n  \r\n  Example\r\n  \r\n```js\r\n plist.setDebug(false)\r\n```\r\n\r\n## Plist.setWaitForDebugger(d:Boolean)\r\n\r\n  Sets the `WaitForDebugger` bool\r\n  \r\n  Example\r\n  \r\n```js\r\n plist.setWaitForDebugger(false)\r\n```\r\n\r\n## Plist.setAbandonProcessGroup(d:Boolean)\r\n\r\n  Sets the `AbandonProcessGroup` bool\r\n  \r\n  Example\r\n  \r\n```js\r\n plist.setAbandonProcessGroup(false)\r\n```\r\n\r\n## Plist.setLowPriorityIO(d:Boolean)\r\n\r\n  Sets the `LowPriorityIO` bool\r\n  \r\n  Example\r\n  \r\n```js\r\n plist.setLowPriorityIO(false)\r\n```\r\n\r\n## Plist.setLaunchOnlyOnce(d:Boolean)\r\n\r\n  Sets the `LaunchOnlyOnce` bool\r\n  \r\n  Example\r\n  \r\n```js\r\n plist.setLaunchOnlyOnce(true)\r\n```\r\n\r\n## Plist.setLabel(label:String)\r\n\r\n  Sets the `Label` field\r\n  \r\n  Example\r\n  \r\n```js\r\n plist.setLabel('com.curapps.test')\r\n```\r\n\r\n## Plist.setProgram(program:String)\r\n\r\n  Sets the `Program` string\r\n  \r\n  Example\r\n  \r\n```js\r\n plist.setProgram('/usr/local/bin/node')\r\n```\r\n\r\n## Plist.setUserName(username:String)\r\n\r\n  Sets the `UserName` string\r\n  \r\n  Example\r\n  \r\n```js\r\n plist.setUserName('evan')\r\n```\r\n\r\n## Plist.setGroupName(groupname:String)\r\n\r\n  Sets the `GroupName` string\r\n  \r\n  Example\r\n  \r\n```js\r\n plist.setGroupName('admin')\r\n```\r\n\r\n## Plist.setLimitLoadToSessionType(sessiontype:String)\r\n\r\n  Sets the `LimitLoadToSessionType` string \r\n  \r\n  Example\r\n  \r\n```js\r\n plist.setLimitLoadToSessionType('Aqua')\r\n```\r\n\r\n## Plist.setStdErrPath(p:String)\r\n\r\n  Sets the `StandardErrorPath` string\r\n  \r\n  Example\r\n  \r\n```js\r\n plist.setStdErrPath('/Users/evan/Desktop/err.log')\r\n```\r\n\r\n## Plist.setStdOutPath(p:String)\r\n\r\n  Sets the `StandardOutPath` string\r\n  \r\n  Example\r\n  \r\n```js\r\n plist.setStdOutPath('/Users/evan/Desktop/out.log')\r\n```\r\n\r\n## Plist.setStdInPath(s:String)\r\n\r\n  Sets the `StandardInPath` string\r\n  \r\n  Example\r\n  \r\n```js\r\n plist.setStdInPath('/Users/evan/Desktop/in')\r\n```\r\n\r\n## Plist.setRootDir(dir:String)\r\n\r\n  Sets the `RootDirectory` string\r\n  \r\n  Example\r\n  \r\n```js\r\n plist.setRootDir('/Users/evan/Desktop/test')\r\n```\r\n\r\n## Plist.setWorkingDir(dir:String)\r\n\r\n  Sets the `WorkingDirectory` string\r\n  \r\n  Example\r\n  \r\n```js\r\n plist.setWorkingDir('/Users/evan/Desktop/test')\r\n```\r\n\r\n## Plist.setProcessType(s:String)\r\n\r\n  Sets the `ProcessType` string\r\n  \r\n  Example\r\n  \r\n```js\r\n plist.setProcessType('Background')\r\n```\r\n\r\n## Plist.setUmask(umask:Number)\r\n\r\n  Sets the `Umask` number\r\n  \r\n  Example\r\n  \r\n```js\r\n plist.setUmask(501)\r\n```\r\n\r\n## Plist.setTimeOut(to:Number)\r\n\r\n  Sets the `TimeOut` number\r\n  \r\n  Example\r\n  \r\n```js\r\n plist.setTimeOut(30)\r\n```\r\n\r\n## Plist.setExitTimeOut(to:Number)\r\n\r\n  Sets the `ExitTimeOut` number\r\n  \r\n  Example\r\n  \r\n```js\r\n plist.setExitTimeOut(30)\r\n```\r\n\r\n## Plist.setThrottleInterval(throttle:Number)\r\n\r\n  Sets the `ThrottleInterval` number\r\n  \r\n  Example\r\n  \r\n```js\r\n plist.setThrottleInterval(300)\r\n```\r\n\r\n## Plist.setStartInterval(i:Number)\r\n\r\n  Sets the `StartInterval` number\r\n  \r\n  Example\r\n  \r\n```js\r\n plist.setStartInterval(30)\r\n```\r\n\r\n## Plist.setNice(i:Number)\r\n\r\n  Sets the `Nice` number\r\n  \r\n  Example\r\n  \r\n```js\r\n plist.setNice(19)\r\n```\r\n\r\n## Plist.setProgramArgs(args:Array|String|Number|Object)\r\n\r\n  Sets the `ProgramArguments` array\r\n  \r\n  Example\r\n  \r\n```js\r\n var args = [\r\n     '/usr/local/bin/node'\r\n   , '/Users/evan/Desktop/test/app.js'\r\n ]\r\n plist.setProgramArgs(args)\r\n```\r\n\r\n## Plist.setLimitLoadToHosts(hosts:Array|String|Number)\r\n\r\n  Sets the `LimitLoadToHosts` array\r\n  \r\n  Example\r\n  \r\n```js\r\n var hosts = ['127.0.0.1']\r\n plist.setLimitLoadToHosts(hosts)\r\n```\r\n\r\n## Plist.setLimitLoadFromHosts(hosts:Array|String|Number)\r\n\r\n  Sets the `LimitLoadFromHosts` array\r\n  \r\n  Example\r\n  \r\n```js\r\n var hosts = ['127.0.0.1']\r\n plist.setLimitLoadFromHosts(hosts)\r\n```\r\n\r\n## Plist.setWatchPaths(p:Array|String|Number|Object)\r\n\r\n  Sets the `WatchPaths` array\r\n  \r\n  Example\r\n  \r\n```js\r\n var p = '/Users/evan/Desktop/test/apps'\r\n plist.setWatchPaths(p)\r\n```\r\n\r\n## Plist.setQueueDirectories(d:Array|String|Number|Object)\r\n\r\n  Sets the `QueueDirectories` array\r\n  \r\n  Example\r\n  \r\n```js\r\n var dirs = ['/Users/evan/Desktop/test/apps']\r\n plist.setQueueDirectories(dirs)\r\n```\r\n\r\n## Plist.setEnvVar(obj:Object)\r\n\r\n  Sets the `EnvironmentVariables` object\r\n  \r\n  Example\r\n  \r\n```js\r\n var env = { NODE_ENV: 'test' };\r\n plist.setEnvVar(env)\r\n```\r\n\r\n## Plist.setSoftResourceLimits(obj:Object)\r\n\r\n  Sets the `SoftResourceLimits` object\r\n  \r\n  Example\r\n  \r\n```js\r\n var res = { 'NumberOfFiles': 10000 }\r\n plist.setSoftResourceLimits(res)\r\n```\r\n\r\n## Plist.setHardResourceLimits(obj:Object)\r\n\r\n  Sets the `HardResourceLimits` object\r\n  \r\n  Example\r\n  \r\n```js\r\n var res = { 'NumberOfFiles': 10000 }\r\n plist.setHardResourceLimits(res)\r\n```\r\n\r\n## Plist.setKeepAlive(keepalive:Boolean|String|Number|Object)\r\n\r\n  Sets the `KeepAlive` value\r\n  \r\n  Examples\r\n  \r\n```js\r\n plist.setKeepAlive(true)\r\n```\r\n\r\n  \r\n```js\r\n var opts = { SuccessfulExit: false }\r\n plist.setKeepAlive(opts)\r\n```\r\n\r\n## Plist.deleteStartCalendarInterval()\r\n\r\n  Removes the `StartCalendarInterval` object/array\r\n  \r\n  Example\r\n  \r\n```js\r\n plist.deleteStartCalendarInterval()\r\n```\r\n\r\n## Plist.addCalendarInterval(o:Object)\r\n\r\n  Adds a Dictionary for the `StartCalendarInterval`\r\n  \r\n  Example\r\n  \r\n```js\r\n // Run at minute 1 of every hour\r\n var obj = { Minute: 1 }\r\n plist.addCalendarInterval(obj)\r\n```\r\n\r\n## Plist.build(obj:Object)\r\n\r\n  Builds the actual plist object into a string\r\n  \r\n  Example\r\n  \r\n```js\r\n var contents = plist.build()\r\n```\r\n\r\n## Plist.reset()\r\n\r\n  Wipes the slate clean\r\n  \r\n  Example\r\n  \r\n```js\r\n plist.reset()\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}